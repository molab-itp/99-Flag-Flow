_notes.txt


# --
2023-11-21 16:50:54

>> Correction to USA Washington, DC lat lon
    "latitude": 38.53,
    "longitude": -77.02
--> 
    "latitude": 38.883333,
    "longitude": -77.016667

# --
2023-11-20 12:12:09


https://github.com/samayo/country-json/blob/master/src/country-by-geo-coordinates.json

    {
        "country": "Afghanistan",
        "north": 38.4834,
        "south": 29.3775,
        "west": 60.4784,
        "east": 74.8794
    },


    }, {
        "properties": {
            "country": "Afghanistan",
            "city": "Kabul",
            "tld": "af",
            "iso3": "AFG",
            "iso2": "AF"
        },
        "geometry": {
            "coordinates": [69.11, 34.31],
            "type": "Point"
        },
        "id": "AF"

# --

https://gist.github.com/mcwhittemore/1f81416ff74dd64decc6?short_path=5c9378f

https://gist.githubusercontent.com/mcwhittemore/1f81416ff74dd64decc6/raw/f34bddb3bf276a32b073ba79d0dd625a5735eedc/usa-state-capitals.geojson
mcwhittemore/usa-state-capitals.geojson

# --

countries dict + array for 
Dictionary
Array
?? shared elements
make them classes

struct Location: Identifiable, Codable, Equatable {
--> class

# --

  {
    "url": "/wiki/Bangladesh",
    "alpha3": "BGD",
    "name": "Bangladesh",
    "file_url": "//upload.wikimedia.org/wikipedia/commons/f/f9/Flag_of_Bangladesh.svg",
    "license": "Public domain"
  },
23.763889, 90.388889	
Dhaka
<wpt lat="23.763889" lon="90.388889">

        "properties": {
            "country": "Bangladesh",
            "city": "Dhaka",
            "tld": "bd",
            "iso3": "BGD",
            "iso2": "BD"
        },
        "geometry": {
            "coordinates": [90.24, 23.43],
            "type": "Point"
        },
        "id": "BD"

  {
    "url": "/wiki/Aruba",
    "alpha3": "ABW",
    "name": "Aruba",
    "file_url": "//upload.wikimedia.org/wikipedia/commons/f/f6/Flag_of_Aruba.svg",
    "license": "Public domain"
  },
12.518611, -70.035833
Oranjestad

https://github.com/Stefie/geojson-world

        "properties": {
            "country": "Aruba",
            "city": "Oranjestad",
            "tld": "aw",
            "iso3": "ABW",
            "iso2": "AW"
        },
        "geometry": {
            "coordinates": [-70.02, 12.31],
            "type": "Point"
        },
        "id": "AW"

https://datahub.io/core/geo-countries

{ "type": "Feature", 
"properties": { "ADMIN": "Aruba", "ISO_A3": "ABW" }, 
"geometry": { "type": "Polygon", 
    "coordinates": 
        [ [ [ -69.996937628999916, 12.577582098000036 ], [ -69.936390753999945,
        12.531724351000051 ], [ -69.924672003999945, 12.519232489000046 ], [
        -69.915760870999918, 12.497015692000076 ], [ -69.880197719999842,
        12.453558661000045 ], [ -69.876820441999939, 12.427394924000097 ], [
        -69.888091600999928, 12.417669989000046 ], [ -69.908802863999938,
        12.417792059000107 ], [ -69.930531378999888, 12.425970770000035 ], [
        -69.945139126999919, 12.44037506700009 ], [ -69.924672003999945,
        12.44037506700009 ], [ -69.924672003999945, 12.447211005000014 ], [
        -69.958566860999923, 12.463202216000099 ], [ -70.027658657999922,
        12.522935289000088 ], [ -70.048085089999887, 12.531154690000079 ], [
        -70.058094855999883, 12.537176825000088 ], [ -70.062408006999874,
        12.546820380000057 ], [ -70.060373501999948, 12.556952216000113 ], [
        -70.051096157999893, 12.574042059000064 ], [ -70.048736131999931,
        12.583726304000024 ], [ -70.052642381999931, 12.600002346000053 ], [
        -70.059641079999921, 12.614243882000054 ], [ -70.061105923999975,
        12.625392971000068 ], [ -70.048736131999931, 12.632147528000104 ], [
        -70.00715084499987, 12.5855166690001 ], [ -69.996937628999916,
        12.577582098000036 ] ] ] } },



# --
2023-11-19 12:24:35

        // Animate the transform
SwiftGlobe
    internal func applyUserTiltAndRotation() {
        // Animate the transform
        let originalTransform = userTiltAndRotation.transform
        userTiltAndRotation.transform = matrix
        let animation = CABasicAnimation(keyPath: "transform")
        animation.fromValue = originalTransform
        animation.duration = 3.0
        userTiltAndRotation.addAnimation(animation, forKey: nil)



let originalTransform = cameraOrbit.transform
cameraOrbit.transform = SCNMatrix4Rotate(cameraOrbit.transform, angle, x, y, 0.0)
let animation = CABasicAnimation(keyPath: "transform")
animation.fromValue = originalTransform
animation.duration = 0.5
cameraOrbit.addAnimation(animation, forKey: nil)


    func addPulseAnimation() {
        let animation = CABasicAnimation(keyPath: "scale")
        animation.fromValue = SCNVector3(x: Float(0.5), y: Float(0.5), z: Float(0.5))
        animation.toValue = SCNVector3(x: Float(3.0), y: Float(3.0), z: Float(3.0))
        animation.duration = 1.0
        animation.autoreverses = true
        animation.repeatCount = Float.infinity
        animation.timingFunction = CAMediaTimingFunction(name: CAMediaTimingFunctionName.easeOut)
        node.addAnimation(animation, forKey: "throb")

https://stackoverflow.com/questions/46593237/scenekit-animate-scnnode-transform

let originalTransform = cameraOrbit.transform
cameraOrbit.transform = SCNMatrix4Rotate(cameraOrbit.transform, angle, x, y, 0.0)
let animation = CABasicAnimation(keyPath: "transform")
animation.fromValue = originalTransform
animation.duration = 0.5
cameraOrbit.addAnimation(animation, forKey: nil)


https://developer.apple.com/documentation/scenekit/scnaction

        // !!@ increase in duration does not slow down transition to new location
//        let spinTo = SCNAction.rotate(toAxisAngle: axisAngle, duration: 3.0)

        // the globe spins once per minute
        if enableAutomaticSpin {
            let spinRotation = SCNAction.rotate(by: 2 * .pi, around: SCNVector3(0, 1, 0), duration: kGlobeDefaultRotationSpeedSeconds)
            let spinAction = SCNAction.repeatForever(spinRotation)
            globe.runAction(spinAction)


>> Sharing model state
    static let main = AppModel()
https://developer.apple.com/documentation/swift/managing-a-shared-resource-using-a-singleton

# --
2023-11-19 04:48:03

>> Corrected sample data
EarthFlags/EarthFlags/Map/LocationModel.swift
            Location(id: "JAM", latitude: 17.983333, longitude: -76.8, label: "JAM", capital: "Kingston", delta: 10.0)

>> Test on phone
EarthFlags/EarthFlags/EarthFlagsApp.swift
                .environmentObject(LocationModel.example)


>> Crash changing @Published var region
EarthFlags/EarthFlags/Map/LocationModel.swift
        region2 = MKCoordinateRegion(

>> Preview crash LocationModel func next()
    static var example:LocationModel {

EarthFlags/EarthFlags/Map/LocationModel.swift
    func next() {


# --
2023-11-19 04:27:30

Default models for preview / testing

EarthFlags/EarthFlags/EarthFlagsApp.swift
                .environmentObject(LocationModel())

EarthFlags/EarthFlags/MainTabView.swift
#Preview {
    MainTabView()
        .environmentObject(Model.example)
        .environmentObject(LocationModel())
}

EarthFlags/EarthFlags/Map/MapTabView.swift
#Preview {
    MapTabView()
        .environmentObject(LocationModel())
}

# --
2023-11-19 03:47:15

https://developer.apple.com/documentation/mapkit/mapstyle
iOS 17.0 ++

https://developer.apple.com/documentation/mapkit/mapkit_for_swiftui

https://developer.apple.com/documentation/mapkit/mkmaptype

https://developer.apple.com/documentation/mapkit/mkmapview/4010601-preferredconfiguration

# --
2023-11-18 17:10:55

# --
2023-11-16 23:50:28

https://www.hackingwithswift.com/quick-start/swiftui/how-to-add-a-search-bar-to-filter-your-data

        NavigationStack {


struct GalleryTabView: View {

                LazyVGrid(columns: columns, spacing: Self.itemSpacing) {
                    ForEach(galleryModel.gallery) { item in
                        NavigationLink(value: item.id) {
                            MediaThumbView(item: item, itemSize: Self.itemSize)
                        }
                        .buttonStyle(.borderless)
                    }
                }
                .padding([.vertical], Self.itemSpacing)

            .navigationDestination(for: String.self) { id in
                if id.isEmpty {
                    GalleryPickerView(galleryKeys: app.settings.galleryKeys,
                                      selection: $selection)
                    
                }
                else if let item = galleryModel.itemFor(id: id) {
                    MediaDetailView(item: item,
                                    priorSelection: app.settings.storeGalleryKey)
                }
            }


# --
2023-11-15 18:55:25

No image named 'flag-NCL' found in asset catalog

jpg assests to fix crash



# --
2023-11-14 09:05:50

run on iphone --> crash taking up too much memory

The app “ViewFlags” has been killed by the operating system 
because it is using too much memory.
Domain: IDEDebugSessionErrorDomain
Code: 11
Recovery Suggestion: Use a memory profiling tool to track the process memory usage.
User Info: {
    DVTErrorCreationDateKey = "2023-11-14 14:06:50 +0000";
    IDERunOperationFailingWorker = DBGLLDBLauncher;
}
--
...

System Information

macOS Version 13.6 (Build 22G120)
Xcode 15.0 (22265) (Build 15A240d)
Timestamp: 2023-11-14T09:06:50-05:00



# --
2023-11-12 15:17:54

First preview / simulator run very slow

>> Went to details >> Use this file >> on the web


https://en.wikipedia.org/wiki/Afghanistan
  {
    "url": "/wiki/Afghanistan",
    "alpha3": "AFG",
    "name": "Afghanistan",
    "file_url": "//upload.wikimedia.org/wikipedia/commons/5/5c/Flag_of_the_Taliban.svg",
    "license": "Public domain"
  },
https://en.wikipedia.org/wiki/Flag_of_Afghanistan#/media/File:Flag_of_the_Taliban_(Shahada_v2).svg
https://upload.wikimedia.org/wikipedia/commons/5/5c/Flag_of_the_Taliban.svg
https://commons.wikimedia.org/wiki/File:Flag_of_the_Taliban_(Shahada_v2).svg

index 94 alpha3 VAT
index 94 name Holy See
index 94 file_url //upload.wikimedia.org/wikipedia/commons/0/00/Flag_of_the_Vatican_City.svg
export no data durl https://upload.wikimedia.org/wikipedia/commons/0/00/Flag_of_the_Vatican_City.svg
index 186 alpha3 STP
index 186 name Sao Tome and Principe
index 186 file_url //upload.wikimedia.org/wikipedia/commons/4/4f/Flag_of_Sao_Tome_and_Principe.svg
export no data durl https://upload.wikimedia.org/wikipedia/commons/4/4f/Flag_of_Sao_Tome_and_Principe.svg
outputString.count 52974


No image named 'flag-STP' found in asset catalog

No image named 'flag-VAT' found in asset catalog 

https://en.wikipedia.org/wiki/S%C3%A3o_Tom%C3%A9_and_Pr%C3%ADncipe
https://en.wikipedia.org/wiki/Flag_of_S%C3%A3o_Tom%C3%A9_and_Pr%C3%ADncipe#/media/File:Flag_of_S%C3%A3o_Tom%C3%A9_and_Pr%C3%ADncipe.svg

https://upload.wikimedia.org/wikipedia/commons/0/0a/Flag_of_S%C3%A3o_Tom%C3%A9_and_Pr%C3%ADncipe.svg

  {
    "url": "/wiki/S%C3%A3o_Tom%C3%A9_and_Pr%C3%ADncipe",
    "alpha3": "STP",
    "name": "Sao Tome and Principe",
    "file_url": "//upload.wikimedia.org/wikipedia/commons/4/4f/Flag_of_Sao_Tome_and_Principe.svg",
    "license": "Public domain"
  },

https://en.wikipedia.org/wiki/Vatican_City
https://en.wikipedia.org/wiki/Flag_of_Vatican_City#/media/File:Flag_of_the_Vatican_City_(2023%E2%80%93present).svg

https://upload.wikimedia.org/wikipedia/commons/3/39/Flag_of_the_Vatican_City_%282023%E2%80%93present%29.svg

  {
    "url": "/wiki/Vatican_City",
    "alpha3": "VAT",
    "name": "Holy See",
    "file_url": "//upload.wikimedia.org/wikipedia/commons/0/00/Flag_of_the_Vatican_City.svg",
    "license": "Public domain"
  },
