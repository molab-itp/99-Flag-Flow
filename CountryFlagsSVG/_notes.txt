_notes.txt


# --
2023-11-15 09:36:10

Added CountryFlagsSVG/CountryFlagsSVG/Resources/flags-svg

  NSBundle *bundle = [NSBundle mainBundle];
  NSString *appPath = [bundle bundlePath];
  NSString *path = [appPath stringByAppendingPathComponent: @"html-src/index-p5js.html"];
  NSURL   *url = [NSURL fileURLWithPath: path];

https://swdevnotes.com/swift/2020/timing_swift_functions/

import Foundation

func timeFunctionUsingDate(repeats: Int, function: ([Int])->Int, list: [Int]) -> (Double, [Double], [Int]) {
    /// Calculate the average execution time by executing the passed in function
    /// with the specified list for the number of repeats specified.
    /// Calculate the average execution time.
    /// Uses Date to measure time duration.
    ///
    /// Returns a tuple containing the following:
    ///   - average execution time in milliseconds  
    ///   - the list of each execution time in milliseconds  
    ///   - the list of the function results (to ensure these are the same)  

    var funcResults = [Int]()
    funcResults.reserveCapacity(repeats)
    var results = [Double]()
    results.reserveCapacity(repeats)
    var averageTime = 0.0
    for _ in 1 ... repeats {
        let startTime = Date()
        funcResults.append(function(list))
        let endTime = Date()
        let timetaken = DateInterval(start: startTime, end: endTime)
        results.append(timetaken.duration * 1000.0)
    }
    averageTime = results.reduce(0,+) / Double(results.count)
    return (averageTime, results, funcResults)
}


# --
2023-11-14 10:56:48

?? Is this an download rate trottling on wiki server?

>> silent lockup up after scrolling
>> on device
Profiling memory allocation
Nothing odd so far


# --
2023-11-12 16:47:36

# --

SVG parsing error. No oval radial gradients supported

>> suspect AFG

>> silent lockup up after scrolling
>> in simulator
>> on device

>> !!@ Wrong placment of @State

struct ContentView: View {
    
    @State var data: Data?
    
    var body: some View {

!!@ Wrong placment of @State
      @State var data: Data?

        ZStack {

# --

# 07-ImageEditDemoJSON

// Read in an image from a url string
func imageFor(string str: String) async -> UIImage!  {
    guard let url = URL(string: str),
          let imgData = try? Data(contentsOf: url),
          let uiImage = UIImage(data:imgData)
    else {
        return nil
    }
    return uiImage
}

struct ItemRow: View {

    @State var uiImage:UIImage?

        .task {
            uiImage =  await imageFor(string: item.urlStr)
        }


func asyncDataFor(url: String) async -> Data {
    guard let url = URL(string: str),
          let data = try? Data(contentsOf: url),
    }
    else { return nil }
    return data;
  }
