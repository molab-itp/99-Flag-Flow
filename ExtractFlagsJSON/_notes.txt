_notes.txt

# --
2023-11-12 11:12:11


    let menu = Bundle.main.decode([MenuSection].self, from: "menu.json")

/Users/jht2/Documents/projects/_planning-molab-repos/_course-repos/
  06-iDine/iDine/Bundle-decode.swift



https://developer.apple.com/documentation/foundation/url

https://developer.apple.com/documentation/foundation/url/1780317-lastpathcomponent



https://developer.apple.com/documentation/foundation/filemanager/1407884-createdirectory

createDirectory(atPath:withIntermediateDirectories:attributes:)

//    let fm = FileManager.default;
//    let url = fm.urls(for: .documentDirectory, in: .userDomainMask).first

/Users/jht2/Documents/projects/_planning-molab-repos/_course-repos/_course-repos.code-workspace
>> Global search on FileManager.default

/Users/jht2/Documents/projects/_planning-molab-repos/_course-repos/
  07-ImageEditDemoJSON/ImageEditDemo/SaveLoadJSON.swift
    func fetchRecording() {
        recordings.removeAll()
        
        let fileManager = FileManager.default
        let documentDirectory = fileManager.urls(for: .documentDirectory, in: .userDomainMask)[0]
        let directoryContents = try! fileManager.contentsOfDirectory(at: documentDirectory, includingPropertiesForKeys: nil)
        for audio in directoryContents {
            let recording = Recording(fileURL: audio, createdAt: getFileDate(for: audio))
            recordings.append(recording)
        }
        
        recordings.sort(by: { $0.createdAt.compare($1.createdAt) == .orderedAscending})


let documentDirectory = fileManager.urls(for: .documentDirectory, in: .userDomainMask)[0]
let documentDirectory = fileManager.urls(for: .documentDirectory, in: .userDomainMask).first

# --

https://youtu.be/80GXk2KCu40
2023-11-11 JSONTidy remix prep
1,298,909,336 bytes (1.31 GB on disk)
4014 Ã— 2304
16:49

2023-11-11-JSONTidy-remix-prep-2k.mov 463.2 MB
2023-11-11-JSONTidy-remix-prep-4K.mov 1.01 GB
2023-11-11-JSONTidy-remix-prep.mov 1.3 GB

Convert to Assets.xcassets

    let url = URL(string: str)
    let imgData = try? Data(contentsOf: url!)

https://github.com/linssen/country-flag-icons/blob/master/countries.json

  {
    "url": "/wiki/Jamaica",
    "alpha3": "JAM",
    "name": "Jamaica",
    "file_url": "//upload.wikimedia.org/wikipedia/commons/0/0a/Flag_of_Jamaica.svg",
    "license": "Public domain"
  },
  http://upload.wikimedia.org/wikipedia/commons/0/0a/Flag_of_Jamaica.svg

2023-MoLab/_Assets.xcassets.code-workspace

flag-JAM.imageset
flag-JAM.imageset/Contents.json
{
  "images" : [
    {
      "filename" : "Flag_of_Jamaica.svg",
      "idiom" : "universal",
      "scale" : "1x"
    },
    {
      "idiom" : "universal",
      "scale" : "2x"
    },
    {
      "idiom" : "universal",
      "scale" : "3x"
    }
  ],
  "info" : {
    "author" : "xcode",
    "version" : 1
  }
}
flag-JAM.imageset/Flag_of_Jamaica.svg


  {
    "url": "/wiki/United_States",
    "alpha3": "USA",
    "name": "United States of America",
    "file_url": "//upload.wikimedia.org/wikipedia/en/a/a4/Flag_of_the_United_States.svg",
    "license": "Public domain"
  },

    {
    "url": "/wiki/Guyana",
    "alpha3": "GUY",
    "name": "Guyana",
    "file_url": "//upload.wikimedia.org/wikipedia/commons/9/99/Flag_of_Guyana.svg",
    "license": "Public domain"
  },



